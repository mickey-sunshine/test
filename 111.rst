.. _tutorial_quickstart_report_timing:

Quick Start on Power Analysis
-----------------------------

Get Power Report
~~~~~~~~~~~~~~~~~~~~

.. note:: To keep a clean project structure, we strongly recommend users to create a new directory for a new project.

A project directory in the purpose of power analysis consists of the following subdirectories:

.. code-block::

  alkaidS_power_timebased_report
  ├── config
  │   └── ptpx_task.yaml
  ├── Makefile
  ├── netlist -> ../alkaid_v0p5_power_leakage/netlist
  ├── report.tar.gz
  ├── sdc -> ../alkaidS_power_timebased/sdc
  └── waveform -> ../alkaidS_power_timebased/waveform
  └── _snps_ptpx_<task_name>

  
where 

- the ``config`` directory contains the task configuration file. See details in the :ref:`file_format_task_file`
- the ``Makefile`` is the top-level makefile to run PTPX tasks. Refer to examples under ``tests/tasks``
- the ``netlist`` directory contains the HDL netlists that model the FPGA fabric
- the ``report.tar.gz`` directory contains the required .rpt files.
- the ``sdc`` directory contains the bitstream file for the HDL design to be analyzed
- the ``waveform`` directory is storage path for waveform files.
- the ``_snps_ptpx_<task_name>`` directory is automatically generated by PTPX runs, to host intermediate/temporary files. Please avoid to put important data inside.
.. note:: We strongly recommend to use zipped copy for bitstream files and activity files

Once the project is initialized, fill the task configuration file accordingly.

.. note:: A shortcut to create a new project is to copy an example project, e.g., ``tests/tasks/alkaidS_power_timebased_report``

Create Task Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~

Fill the required data in the ``config/ptpx_task.yaml``. Refer to :ref:`file_format_task_file` for detailed explanation.

.. note:: Only the power-related information is required

Take the example of the following task configuration file, 

- For general settings such as netlists, please double check with your manager.
- For report power tasks, please select your waveform file and bitstream file properly.

.. literalinclude:: example_report_power_task.yaml
  :language: yaml

An example of file designed for report dynamic power is shown as follows.

- **report power**

  - **Name:** and2_dynamic
  
  - **Design:**
  
    - `fpga_top`
  
  - **Method:** average
  
  - **Variables:**
  
    - **ptpx_reg_clk_derate:** 0
    - **ptpx_cg_clk_derate:** 0
  
  - **Appvars:**
  
    - **power_default_toggle_rate:** 0
    - **power_default_static_probability:** 0
    - **power_x_transition_derate_factor:** 0
    - **power_match_state_for_logic_x:** 0
  
  - **SDC:**
  
    - `sdc/set_config_mode.tcl`
  
  - **Reports:**
  
    - **Name:** power_by_cell
    
      - **File:** `reports/and2_dynamic/and2_dynamic.rpt`
      
      - **Command:**
        - `report_power -nosplit -cell_power -area -verbose`
        
      - **Remove Time Stamp:** false
    
    - **Name:** power_by_hierarchy
    
      - **File:** `reports/and2_dynamic/and2_dynamic_by_hierarchy.rpt`
      
      - **Command:**
        - `report_power -hierachy -levels 2 -nosplit -verbose`
        
      - **Remove Time Stamp:** true
  
    - **Name:** average_activity
    
      - **File:** `reports/[current_design]/report_switching_activity.average.rpt`
      
      - **Command:**
        - `report_switching_activity -average_activity`
        
      - **Remove Time Stamp:** true

- **Power Summary**

  - **Name:** hierarchy_power

  - **Histogram:**

    - **File:** `../reports/power/histogram/power_histo.png`

    - **Data Type:** "leak power"
    
    - **Hierarchy Level:** 2

  - **Distribution:**
  
    - **File:** `../reports/power/histogram/power_dist.png`

    - **Data Type:** "leak power"
  
    - **Hierarchy Level:** 2

  - **CSV:**
  
    - **Name:** `../reports/power/csv/fpga_top_leakage.csv`
  
    - **Data Type:** "leak power"
  
    - **Hierarchy Level:** 2
  
  - **Power Tasks:**

    - **adder16_dynamic.fpga_top.power_by_hierarchy**

Syntax Explanation
==================

Report-power tasks should be defined under the ``report_power`` section. Each task should contain the following information:

- **name** = ``<string>``

  Specify the unique name for this report-power task. The name will be used to create the runtime directory.

- **Design** = ``<string>``
  Specify a list of the module name from the netlist for which power analysis should be performed. Alternatively, the design list can be defined an external file. 

- **Method** = ``<string>``
  Can be [ time_based | average ]. Depends on different methodology, input files are different
  In time-based analysis method, the flow require activity files or waveform files.In average analysis method, the flow does not require activity files or waveform files. User may define switching activities in their SDC files.

- **Variables** = ``<list>``
  List all the variables which will be utilized by the Tcl scripts. 

- **Appvars** = ``<list>``
  List all the application options/variables which will be utilized by the Tcl scripts

- **SDC** = ``<list>``
  These files will be included before running any power analysis!
  List all the external SDC/Tcl files which will be included in the auto-generated tcl file. All the tcl files will be included in serial. 

In each step, the output reports should be defined under the ``reports`` section. Each report should contain the following information
  - name  = ``<string>``
    Specify the unique name for this save data.
  - file = ``<string>``
    Specify the path to the output file
  - command = ``<list>``
    List the commands to run in PTPX when creating a report file. The commands will be executed serially.
  - remove_time_stamp = ``<bool>``
    Remove the time stamp in the resulting report files.

The parameters for the tasks to be executed and the paths for generating reports need to be defined in section ``power summary``.

- **name** = ``<string>``
  Specify the unique name for this power summary task.

- **Histogram** = ``<string>``
    Specify the unique name for this power summary task. The name will be used to create the runtime directory.

    - name = ``<string>``
        Specify the path to the output file
    - data_type = ``<string>``
        Specify the types of keywords to be extracted.
    - Hierarchy Level: ``Can be all or an integer``
       Specify the level of data to be extracted in power report that contains hierarchy. Note that hierarchy contains a tab space at the beginning of a line. In level 2, only the tile_<int>__<int>_ lines are considered. By default, it should be all, resulting in all the lines to be extracted
        
- **Distribution** = ``<string>``
    Specify the unique name for this power summary task. The name will be used to create the runtime directory.

      - name = ``<string>``
          Specify the path to the output file
      - Hierarchy Level: ``Can be all or an integer``
         Specify the level of data to be extracted in power report that contains hierarchy. Note that hierarchy contains a tab space at the beginning of a line. In level 2, only the tile_<int>__<int>_ lines are considered. By default, it should be all, resulting in all the lines to be extracted

- **CSV** = ``<string>``
    Specify the unique name for this power summary task. The name will be used to create the runtime directory.

    - name = ``<string>``
        Specify the path to the output file
    - Hierarchy Level: ``Can be all or an integer``
     Specify the level of data to be extracted in power report that contains hierarchy. Note that hierarchy contains a tab space at the beginning of a line. In level 2, only the tile_<int>__<int>_ lines are considered. By default, it should be all, resulting in all the lines to be extracted

- **Power Tasks:** = ``<string>``
    Define the name of power tasks in the report section. This will be where the input file comes from. Currently, only support 1 report. Error out when there are more than 1

Run a PTPX task
~~~~~~~~~~~~~~~

We strongly recommend users to use Makefile when running a PTPX task, to avoid complicated setup processes.
Please refer to the ``Makefile`` examples, e.g., ``tests/tasks/alkaidS_power_timebased_report``.

.. literalinclude:: example_report_power_makefile

Once the setup is done, call your make target to run a PTPX task, for example:

.. code-block::

  make parse_report_only
Then you will get power report in ``tests/tasks/alkaidS_power_timebased_report/reports/``,this path will contain CSV files, histograms, and distribution plots. For detailed charts, please check the path.

