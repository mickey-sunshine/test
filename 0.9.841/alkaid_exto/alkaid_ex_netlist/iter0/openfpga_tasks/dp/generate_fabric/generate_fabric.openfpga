# This script is designed to generate fabric Verilog netlists
# with a fixed device layout
# It will only output netlists to be used by backend tools,
# i.e., Synopsys ICC2, including
#   - Verilog netlists
#   - fabric hierarchy description for ICC2's hierarchical flow
#
vpr /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/openfpga_tasks/dp/generate_fabric/vpr_arch.xml /rapidsilicon/data/ArkAngel_Engineering_v0.9.841/bin/..//etc/benchmarks/alkaid_benchmark/micro_benchmark/simple_gates/and2/and2.blif \
  --clock_modeling ideal \
  --device dp \
  --route_chan_width 64 \
  --place_delay_model delta \
  --read_placement_delay_lookup /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/arch/dp/tt_25C_v1p1_placement_delay_lookup.bin \
  --read_router_lookahead /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/arch/dp/tt_25C_v1p1_router_lookahead.bin \
  --read_rr_graph /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/arch/dp/tt_25C_v1p1_rr_graph.bin \
  --skip_sync_clustering_and_routing_results on \
  --absorb_buffer_luts off

# Read OpenFPGA architecture definition
read_openfpga_arch -f /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/openfpga_tasks/dp/generate_fabric/openfpga_arch.xml

# Read OpenFPGA simulation settings
read_openfpga_simulation_setting -f /rapidsilicon/data/ArkAngel_Engineering_v0.9.841/bin/..//etc/device/ALKDC/openfpga_settings/efpga_fix_sim_openfpga.xml

# Read OpenFPGA clock architecture
read_openfpga_clock_arch -f /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/arch/dp/openfpga_global_network.xml

# Append clock network to vpr's routing resource graph
append_clock_rr_graph --verbose

# Annotate the OpenFPGA architecture to VPR data base
# to debug use --verbose options
link_openfpga_arch --sort_gsb_chan_node_in_edges

# Route all the clocks
route_clock_rr_graph --pin_constraints_file /rapidsilicon/data/ArkAngel_Engineering_v0.9.841/bin/..//etc/device/ALKDC/openfpga_settings/pin_constraints_dummy.xml

# Build the module graph
#  - Enabled compression on routing architecture modules
#  - Disable pin duplication on grid modules due to our PD strategy
# TODO: Bring back fabric key
build_fabric --compress_routing --load_fabric_key /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/arch/dp/fabric_key.xml --group_tile /rapidsilicon/data/ArkAngel_Engineering_v0.9.841/bin/..//etc/device/ALKDC/openfpga_settings/tile_config.xml --group_config_block --name_module_using_index #--verbose

# Add a fpga core between fpga top and the underlying modules
add_fpga_core_to_fabric --instance_name fpga_core_inst --verbose

# Rename modules with a given rule
rename_modules --file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/arch/dp/module_names.xml

# Apply renaming

# Output GSB file
write_gsb_to_xml --file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/reports/dp/rr_gsb --unique

# Output mux modules 
write_fabric_hierarchy --file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/reports/dp/module_muxes.yaml --depth 1 --module (grid|cbx|cby|sb)* --filter *mux*_size([0-9]+) --verbose --exclude_empty_modules
# Output config mem modules 
write_fabric_hierarchy --file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/reports/dp/config_mem.yaml --depth 1 --module (grid|cbx|cby|sb)* --filter *config_group_mem_size([0-9]+) --verbose --exclude_empty_modules

# Output references
report_reference --file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/reports/dp/tile_reference.yaml --module fpga_core --no_time_stamp --verbose

# Write the fabric hierarchy of module graph to a file
# This is used by hierarchical PnR flows
write_fabric_hierarchy --file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/reports/dp/fabric_hierarchy.yaml --depth 3

# Write fabric pin physical location file to drive PnR flows
write_fabric_pin_physical_location --file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/reports/dp/fabric_pin_phy_loc.xml --module *tile* --no_time_stamp

# Write the Verilog netlist for FPGA fabric
#  - Enable the use of explicit port mapping in Verilog netlist
#    which is required by Synopsys ICC2 parser
# Do NOT output any time stamp in output files, which is eaiser for version control
write_fabric_verilog --file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/netlist/raw_rtl/dp \
  --constant_undriven_inputs bit0 \
  --explicit_port_mapping \
  --default_net_type wire \
  --no_time_stamp \
  --use_relative_path \
  --verbose

## Output bitstream distribution
#repack 
#build_architecture_bitstream
#build_fabric_bitstream
#write_fabric_bitstream --format xml --file ${OPENFPGA_BITSTREAM_BASE_FILE} --no_time_stamp --trim_path --path_only
#report_bitstream_distribution --file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/reports/dp/bitstream_distribution/bitstream_distribution.xml --no_time_stamp

# Finish and exit OpenFPGA
exit
