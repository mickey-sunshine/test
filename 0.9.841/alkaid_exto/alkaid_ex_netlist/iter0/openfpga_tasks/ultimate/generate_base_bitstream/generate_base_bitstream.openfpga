# This script is designed to generate bitstream files with 
# - a fixed device layout
# - a fixed routing channel width
# - packing, placement and routing results as a reference for debugging bitstream files
vpr /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/openfpga_tasks/ultimate/generate_base_bitstream/vpr_arch.xml /rapidsilicon/data/ArkAngel_Engineering_v0.9.841/bin/..//etc/benchmarks/alkaid_benchmark/micro_benchmark/simple_gates/and2/and2.blif \
  --clock_modeling ideal \
  --device ultimate \
  --route_chan_width 64 \
  --place_delay_model delta \
  --read_placement_delay_lookup /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/arch/ultimate/tt_25C_v1p1_placement_delay_lookup.bin \
  --read_router_lookahead /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/arch/ultimate/tt_25C_v1p1_router_lookahead.bin \
  --read_rr_graph /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/arch/ultimate/tt_25C_v1p1_rr_graph.bin \
  --skip_sync_clustering_and_routing_results on \
  --constant_net_method route 

# Read OpenFPGA architecture definition
read_openfpga_arch -f /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/openfpga_tasks/ultimate/generate_base_bitstream/openfpga_arch.xml

# Read OpenFPGA simulation settings
read_openfpga_simulation_setting -f /rapidsilicon/data/ArkAngel_Engineering_v0.9.841/bin/..//etc/device/ALKDC/openfpga_settings/efpga_fix_sim_openfpga.xml

# Read OpenFPGA clock architecture
read_openfpga_clock_arch -f /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/arch/ultimate/openfpga_global_network.xml

# Append clock network to vpr's routing resource graph
append_clock_rr_graph

# Annotate the OpenFPGA architecture to VPR data base
# to debug use --verbose options
link_openfpga_arch --sort_gsb_chan_node_in_edges 

# Apply fix-up to clustering nets based on routing results
pb_pin_fixup --verbose

# Route clock based on clock network definition
route_clock_rr_graph --pin_constraints_file /rapidsilicon/data/ArkAngel_Engineering_v0.9.841/bin/..//etc/device/ALKDC/openfpga_settings/pin_constraints_dummy.xml

# Apply fix-up to Look-Up Table truth tables based on packing results
lut_truth_table_fixup

# Build the module graph
#  - Enabled compression on routing architecture modules
#  - Enable pin duplication on grid modules
#  TODO: fabric key will be enabled later
build_fabric --compress_routing --load_fabric_key /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/arch/ultimate/fabric_key.xml --frame_view --group_tile /rapidsilicon/data/ArkAngel_Engineering_v0.9.841/bin/..//etc/device/ALKDC/openfpga_settings/tile_config.xml --group_config_block --name_module_using_index #--verbose
# Add a fpga core between fpga top and the underlying modules
add_fpga_core_to_fabric --instance_name fpga_core_inst --verbose
# Rename modules with a given rule
# TODO: Bring this back once module names are finalized
rename_modules --file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/arch/ultimate/module_names.xml

# Repack the netlist to physical pbs
# This must be done before bitstream generator and testbench generation
# Strongly recommend it is done after all the fix-up have been applied
repack #--design_constraints ${OPENFPGA_REPACK_CONSTRAINTS_FILE}

# Skip architecture bitstream output because it is mainly for debugging
# The file is very large, which will cause extra I/O time
build_architecture_bitstream #--write_file arch_bitstream.xml


# Do NOT output any time stamp in output files, which is eaiser for version control
build_fabric_bitstream
write_fabric_bitstream --format xml --file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/reports/ultimate/bitstream_distribution/base_bitstream.xml --no_time_stamp --trim_path --path_only

## Output bitstream distribution
report_bitstream_distribution --file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_netlist/iter0/reports/ultimate/bitstream_distribution/bitstream_distribution.xml --no_time_stamp

# Finish and exit OpenFPGA
exit

# Note :
# To run verification at the end of the flow maintain source in ./SRC directory
