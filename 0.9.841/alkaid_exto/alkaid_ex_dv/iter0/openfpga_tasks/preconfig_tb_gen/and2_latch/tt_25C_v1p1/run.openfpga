# This script is designed to generate testbenches based on
# - given VPR results: packing, placement, routing. 
vpr /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_dv/iter0/openfpga_tasks/preconfig_tb_gen/and2_latch/tt_25C_v1p1/vpr_arch.xml /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_dv/iter0/vpr_results/checkin/and2_latch/tt_25C_v1p1/post_synth.blif \
  --clock_modeling ideal \
  --device ultimate \
  --route_chan_width 64 \
  --circuit_format eblif \
  --analysis \
  --net_file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_dv/iter0/vpr_results/checkin/and2_latch/tt_25C_v1p1/vpr.net \
  --place_file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_dv/iter0/vpr_results/checkin/and2_latch/tt_25C_v1p1/vpr.place \
  --route_file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_dv/iter0/vpr_results/checkin/and2_latch/tt_25C_v1p1/vpr.route \
  --place_delay_model delta \
  --read_placement_delay_lookup /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_dv/iter0/arch/tt_25C_v1p1_placement_delay_lookup.bin \
  --read_router_lookahead /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_dv/iter0/arch/tt_25C_v1p1_router_lookahead.bin \
  --read_rr_graph /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_dv/iter0/arch/tt_25C_v1p1_rr_graph.bin \
  --sdc_file /rapidsilicon/data/ArkAngel_Engineering_v0.9.841/bin/..//etc/device/ALKDC/openfpga_settings/vpr_dummy.sdc \
  --full_stats on \
  --absorb_buffer_luts on \
  --timing_report_detail detailed \
  --timing_report_npaths 100 \
  --skip_sync_clustering_and_routing_results on \
  --verify_file_digests off \
  --constant_net_method route 

# Read OpenFPGA architecture definition
read_openfpga_arch -f /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_dv/iter0/openfpga_tasks/preconfig_tb_gen/and2_latch/tt_25C_v1p1/openfpga_arch.xml

# Read OpenFPGA simulation settings
read_openfpga_simulation_setting -f /rapidsilicon/data/ArkAngel_Engineering_v0.9.841/bin/..//etc/device/ALKDC/openfpga_settings/efpga_fix_sim_openfpga.xml

# Read OpenFPGA clock architecture
read_openfpga_clock_arch -f /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_dv/iter0/arch/openfpga_global_network.xml

# Append clock network to vpr's routing resource graph
append_clock_rr_graph

# Annotate the OpenFPGA architecture to VPR data base
# to debug use --verbose options
link_openfpga_arch --sort_gsb_chan_node_in_edges 

# Check and correct any naming conflicts in the BLIF netlists
check_netlist_naming_conflict --fix --report ./netlist_renaming.xml

# Apply fix-up to clustering nets based on routing results
pb_pin_fixup --verbose #--map_global_net_to_msb

# Route clock based on clock network definition
route_clock_rr_graph --disable_unused_trees --disable_unused_spines --pin_constraints_file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_dv/iter0/vpr_results/checkin/and2_latch/tt_25C_v1p1/final_gclk_pcf.xml

# Apply fix-up to Look-Up Table truth tables based on packing results
lut_truth_table_fixup

# Build the module graph
#  - Enabled compression on routing architecture modules
build_fabric --compress_routing --load_fabric_key /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_dv/iter0/arch/fabric_key.xml --group_tile /rapidsilicon/data/ArkAngel_Engineering_v0.9.841/bin/..//etc/device/ALKDC/openfpga_settings/tile_config.xml --group_config_block --name_module_using_index #--verbose

# Add a fpga core between fpga top and the underlying modules
add_fpga_core_to_fabric --instance_name fpga_core_inst --verbose

# Rename modules with a given rule
rename_modules --file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_dv/iter0/arch/module_names.xml

# Build bitstream database but has not outputs, which is required by testbench writer functions
repack
build_architecture_bitstream #--write_file arch_bitstream.xml
build_fabric_bitstream

# Generate a bus group file on-fly 
ext_exec --command "python3 /rapidsilicon/data/ArkAngel_Engineering_v0.9.841/bin/..//etc/utils/bus_group_gen/bus_group_gen.py --task bgg_task.yaml"

# Write the pre-configured testbench for FPGA fabric
# - Must specify the reference benchmark file if you want to output any testbenches with self-checking feature
# - Do NOT output any time stamp which is easier for version control
# - Force to use relative path which is easier for HDL simulators
# - Do not enable yet `--explicit_port_mapping` which causes errors for benchmarks containing bus ports
write_preconfigured_fabric_wrapper --embed_bitstream none \
   --file /home/yhjiang/Desktop/test_project/to_Mickey/20250911/0.9.841/alkaid_exto/alkaid_ex_dv/iter0/dv/preconfig_testbench/checkin/and2_latch/tt_25C_v1p1 \
   --pin_constraints_file /rapidsilicon/data/ArkAngel_Engineering_v0.9.841/bin/..//etc/benchmarks/alkaid_benchmark/checkin/and2_latch/pcf_gclk.xml \
   --bus_group_file bus_group.xml \
   --explicit_port_mapping \
   --default_net_type wire \
   --dump_waveform \
   --no_time_stamp

# Finish and exit OpenFPGA
exit

# Note :
# To run verification at the end of the flow maintain source in ./SRC directory
